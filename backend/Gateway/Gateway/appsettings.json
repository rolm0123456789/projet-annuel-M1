//{
//  "Logging": {
//    "LogLevel": {
//      "Default": "Information",
//      "Microsoft.AspNetCore": "Warning"
//    }
//  },
//  "AllowedHosts": "*",
//  "ReverseProxy": {
//    "Routes": {
//      "notification": {
//        "ClusterId": "notification-cluster",
//        "Match": {
//          "Path": "/notification/{**catch-all}"
//        }
//      },
//      "review": {
//        "ClusterId": "review-cluster",
//        "Match": {
//          "Path": "/review/{**catch-all}"
//        }
//      }
//    },
//    "Clusters": {
//      "notification-cluster": {
//        "Destinations": {
//          "d1": {
//            "Address": "https://localhost:7117/"
//          }
//        }
//      },
//      "review-cluster": {
//        "Destinations": {
//          "d1": {
//            "Address": "https://localhost:7023/"
//          }
//        }
//      }
//    }
//  }
////}

//{
//  "AllowedHosts": "*",
//  "Logging": {
//    "LogLevel": {
//      "Default": "Information",
//      "Microsoft": "Information",
//      "Microsoft.Hosting.Lifetime": "Information"
//    }
//  },
//  "Serilog": {
//    "Using": [ "Serilog.Sinks.File" ],
//    "MinimumLevel": "Information",
//    "WriteTo": [
//      {
//        "Name": "File",
//        "Args": {
//          "path": "proxy-.log",
//          "rollingInterval": "Day"
//        }
//      }
//    ]
//  },
//  "ReverseProxy": {
//    "Routes": {
//      "notification": {
//        "ClusterId": "notification-cluster",
//        "Match": {
//          "Path": "/notification/{**catch-all}"
//        },
//        "Transforms": [
//          { "PathPrefix": "/" },
//          { "RequestHeadersCopy": "true" },
//          { "RequestHeaderOriginalHost": "false" }
//        ]

//      },
//      "review": {
//        "ClusterId": "review-cluster",
//        "Match": {
//          "Path": "/review/{**catch-all}"
//        },
//        "Transforms": [
//          { "RequestHeadersCopy": "true" },
//          { "RequestHeaderOriginalHost": "false" }
//        ]

//      }
//    },
//    "Clusters": {
//      "notification-cluster": {
//        "Destinations": {
//          "d1": {
//            "Address": "https://localhost:7117"
//          }
//        },
//        "HttpClient": {
//          "DangerousAcceptAnyServerCertificate": "true",
//          "EnableMultipleHttp2Connections": "true"
//        }

//      },
//      "review-cluster": {
//        "Destinations": {
//          "d1": {
//            "Address": "https://localhost:7023"
//          }
//        },
//        "HttpClient": {
//          "DangerousAcceptAnyServerCertificate": "true",
//          "EnableMultipleHttp2Connections": "true"
//        }

//      }
//    }
//  }
//}


//{
//  "AllowedHosts": "*",
//  "Logging": {
//    "LogLevel": {
//      "Default": "Information",
//      "Microsoft": "Information",
//      "Microsoft.Hosting.Lifetime": "Information"
//    }
//  },
//  "Serilog": {
//    "Using": [ "Serilog.Sinks.File" ],
//    "MinimumLevel": "Information",
//    "WriteTo": [
//      {
//        "Name": "File",
//        "Args": {
//          "path": "proxy-.log",
//          "rollingInterval": "Day"
//        }
//      }
//    ]
//  },
//  "ReverseProxy": {
//    "Routes": {
//      "route1": {
//        "ClusterId": "defaultCluster",
//        "Match": {
//          "Path": "/r/{**catch-all}"
//        },
//        "Transforms": [
//          { "PathPrefix": "/" },
//          { "RequestHeadersCopy": "true" },
//          { "RequestHeaderOriginalHost": "false" }
//        ]
//      },
//      "route2": {
//        "ClusterId": "deuxCluster",
//        "Match": {
//          "Path": "/notif/{**catch-all}"
//        },
//        "Transforms": [
//          { "RequestHeadersCopy": "true" },
//          { "RequestHeaderOriginalHost": "false" }
//        ]
//      }
//    },
//    "Clusters": {
//      "defaultCluster": {
//        "Destinations": {
//          "restcountries": {
//            "Address": "https://localhost:7117"
//          }
//        },
//        "HttpClient": {
//          "DangerousAcceptAnyServerCertificate": "true",
//          "EnableMultipleHttp2Connections": "true"
//        }
//      },
//      "deuxCluster": {
//        "Destinations": {
//          "restcountries": {
//            "Address": "https://localhost:7117"
//          }
//        },
//        "HttpClient": {
//          "DangerousAcceptAnyServerCertificate": "true",
//          "EnableMultipleHttp2Connections": "true"
//        }
//      }
//    }
//  }
//}

{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "UseCodeBasedConfig": "true",
  "ReverseProxy": {
    "Routes": {
      "route1": {
        "ClusterId": "cluster1",
        "Match": {
          "Path": "/api/service/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api/service"
          },
          {
            "ResponseHeader": "Source",
            "Append": "YARP",
            "When": "Success"
          }
        ]
      },
      "route2": {
        "ClusterId": "cluster2",
        "Match": {
          "Path": "/api/review/{**catch-all}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api/review"
          },
          {
            "ResponseHeader": "Source",
            "Append": "YARP",
            "When": "Success"
          }
        ]
      }

    },
    "Clusters": {
      "cluster1": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "cluster1/destination1": {
            "Address": "https://localhost:7117/"
          },
          //"cluster1/destination2": {
          //  "Address": "https://localhost:7117/"
          //}
        }
        },
        "cluster2": {
          "LoadBalancingPolicy": "RoundRobin",
          "Destinations": {
            "cluster2/destination1": {
              "Address": "https://localhost:7023/"
            },
            //"cluster2/destination2": {
            //  "Address": "https://localhost:7117/"
            //}
          }
        }
      }
  }
}
///*
//using corim.antenna.api.network;
//using corim.antenna.core;
//using corim.antenna.sqlAdo;
//using Microsoft.AspNetCore.Diagnostics.HealthChecks;
//using Yarp.ReverseProxy.Configuration;
//using Yarp.ReverseProxy.LoadBalancing;
//using Yarp.ReverseProxy.Health;

//namespace corim.antenna.serverNetCore
//{
//    internal static class ClusteringExtensions
//    {
//        public static IReverseProxyBuilder ConfigureClustering(this WebApplicationBuilder builder)
//        {
//            // Spécifier des niveaux de log pour des catégories spécifiques
//            builder.Logging.AddFilter("Yarp.ReverseProxy", (api.CApplicationConst.Debug ? LogLevel.Debug : LogLevel.Error)); // Log niveau Debug pour YARP


//            //définition des routes à intercepter
//            string defautUrlBase = $"http://localhost:{api.config.CConfigManagerAccess.ConfigManager.GetSetting(CNetworkManager.REMOTING_PORT_KEY)}";
//            var destinationsForCore = new Dictionary<string, DestinationConfig>();
//            destinationsForCore[$"core"] = new DestinationConfig()
//            {
//                Address = defautUrlBase
//            };


//            var destinationsForBatchs = new Dictionary<string, DestinationConfig>();;
//            destinationsForBatchs[$"batchs"] = new DestinationConfig()
//            {
//                Address = (CServerLockManager.Instance.ClusterBatch)
//                    ? CNetworkManager.GetUrlBaseForClientMode(true, EClientMode.ServerBatch)
//                    : defautUrlBase
//            };

//            var destinationsForTasks = new Dictionary<string, DestinationConfig>();
//            destinationsForTasks[$"tasks"] = new DestinationConfig()
//            {
//                Address = (CServerLockManager.Instance.ClusterTasks)
//                    ? CNetworkManager.GetUrlBaseForClientMode(true, EClientMode.ServerTask)
//                    : destinationsForBatchs[$"batchs"].Address
//            };

//            var destinationsForOptimization = new Dictionary<string, DestinationConfig>();
//            destinationsForOptimization[$"optimization"] = new DestinationConfig()
//            {
//                Address = (CServerLockManager.Instance.ClusterOptimisationTournee)
//                    ? CNetworkManager.GetUrlBaseForClientMode(true, EClientMode.ServerOptimization)
//                    : destinationsForTasks[$"tasks"].Address
//            };

//            // Si plusieurs clusteurs disponible
//            var destinationsForHost = new Dictionary<string, DestinationConfig>();
//            if (CServerLockManager.Instance.Cluster && CServerLockManager.Instance.NbCluster > 0)
//            {
//                for (int n = 1; n <= CServerLockManager.Instance.NbCluster; n++)
//                {
//                    destinationsForHost[$"host{n.ToString("00")}"] = new DestinationConfig()
//                    {
//                        Address = CNetworkManager.GetUrlBaseForClientMode(true, EClientMode.ServerApi, n)
//                    };
//                }
//            }
//            else
//            {
//                destinationsForHost[$"hosts"] = new DestinationConfig()
//                {
//                    Address = destinationsForCore[$"core"].Address
//                };
//            }

//            // Ajouter les services de reverse proxy YARP
//            return builder.Services.AddReverseProxy()
//                .LoadFromMemory(
//                    new[]
//                    {
//                         new RouteConfig()
//                        {
//                            RouteId = "core",
//                            ClusterId = "core-cluster",
//                            Match = new RouteMatch
//                            {
//                                Path = "/core/{**catch-all}" // Match toutes les requêtes
//                            },
//                            Transforms = new[]
//                            {
//                                new Dictionary<string, string>
//                                {
//                                    { "PathRemovePrefix", "/core" }, // Exemple: Supprimer le préfixe "/service"
//                                }
//                            }
//                        },
//                        new RouteConfig()
//                        {
//                            RouteId = "batchs",
//                            ClusterId = "batchs-cluster",
//                            Match = new RouteMatch
//                            {
//                                Path = "/batchs/{**catch-all}" // Match toutes les requêtes
//                            },
//                            Transforms = new[]
//                            {
//                                new Dictionary<string, string>
//                                {
//                                    { "PathRemovePrefix", "/batchs" }, // Exemple: Supprimer le préfixe "/service"
//                                }
//                            }
//                        },
//                        new RouteConfig()
//                        {
//                            RouteId = "tasks",
//                            ClusterId = "tasks-cluster",
//                            Match = new RouteMatch
//                            {
//                                Path = "/tasks/{**catch-all}" // Match toutes les requêtes
//                            },
//                            Transforms = new[]
//                            {
//                                new Dictionary<string, string>
//                                {
//                                    { "PathRemovePrefix", "/tasks" }, // Exemple: Supprimer le préfixe "/service"
//                                }
//                            }
//                        },
//                        new RouteConfig()
//                        {
//                            RouteId = "optimization",
//                            ClusterId = "optimization-cluster",
//                            Match = new RouteMatch
//                            {
//                                Path = "/optimization/{**catch-all}" // Match toutes les requêtes
//                            },
//                            Transforms = new[]
//                            {
//                                new Dictionary<string, string>
//                                {
//                                    { "PathRemovePrefix", "/optimization" }, // Exemple: Supprimer le préfixe "/service"
//                                }
//                            }
//                        },
//                        new RouteConfig()
//                        {
//                            RouteId = "hosts",
//                            ClusterId = "hosts-cluster",
//                            Match = new RouteMatch
//                            {
//                                Path = "/hosts/{**catch-all}" // Match toutes les requêtes
//                            },
//                            Transforms = new[]
//                            {
//                                new Dictionary<string, string>
//                                {
//                                    { "PathRemovePrefix", "/hosts" }, // Exemple: Supprimer le préfixe "/service"
//                                }
//                            }
//                        }
//                    },
//                    new[]
//                    {
//                         new ClusterConfig()
//                        {
//                            ClusterId = "core-cluster",
//                            Destinations = destinationsForCore
//                        },
//                         new ClusterConfig()
//                        {
//                            ClusterId = "batchs-cluster",
//                            Destinations = destinationsForBatchs
//                        },
//                        new ClusterConfig()
//                        {
//                            ClusterId = "tasks-cluster",
//                            Destinations = destinationsForTasks
//                        },
//                        new ClusterConfig()
//                        {
//                            ClusterId = "hosts-cluster",
//                            Destinations = destinationsForHost,
//                            LoadBalancingPolicy =  (CServerLockManager.Instance.Cluster && CServerLockManager.Instance.NbCluster > 0)
//                                ? LoadBalancingPolicies.LeastRequests
//                                : LoadBalancingPolicies.Random,
//                            /*
//                            HealthCheck = (CServerLockManager.Instance.Cluster && CServerLockManager.Instance.NbCluster > 0)
//                                ? new HealthCheckConfig
//                                {
//                                    Active = new ActiveHealthCheckConfig
//                                    {
//                                        Enabled = true,
//                                        Interval = TimeSpan.FromSeconds(10),
//                                        Timeout = TimeSpan.FromSeconds(30),
//                                        Policy = HealthCheckConstants.ActivePolicy.ConsecutiveFailures,                                        
//                                        Path = "/health",
                                                                               
//                                    }
//                                }
//                                : new HealthCheckConfig
//                                {
//                                    Active = new ActiveHealthCheckConfig
//                                    {
//                                        Enabled = true,
//                                        Interval = TimeSpan.FromSeconds(600),
//                                        Timeout = TimeSpan.FromSeconds(30),                                                                                
//                                        Path = "/health"
//                                    }
//                                }
//                            */
//                        }
//                    });
//        }
//    }
//}



//*/
